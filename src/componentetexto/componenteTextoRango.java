/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package componentetexto;

import java.awt.Color;
import java.io.Serializable;

/**
 *
 * @author Eli
 */
public class componenteTextoRango extends javax.swing.JPanel implements Serializable{

    private String elegido;
    private int max, min;

    public componenteTextoRango() {
        initComponents();
        elegido = "All";
        max = min = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        eti_titulo = new javax.swing.JLabel();
        txt_texto = new javax.swing.JTextField();

        eti_titulo.setText("Titulo");

        txt_texto.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_textoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_textoKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(eti_titulo)
                .addGap(43, 43, 43)
                .addComponent(txt_texto, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eti_titulo)
                    .addComponent(txt_texto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txt_textoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_textoKeyTyped
        char c = evt.getKeyChar();
        // Va a reestringir acceso si elegido no es All
        if (!elegido.equalsIgnoreCase("All")) {
            if (elegido.equalsIgnoreCase("Numerico")) {
                // Solo pasar elementos numericos
                if (!Character.isDigit(c)) {
                    evt.consume();
                    getToolkit().beep();
                }
            } else {
                // Solo para letras
                if (Character.isDigit(c)) {
                    evt.consume();
                    getToolkit().beep();
                }
            }
        }
    }//GEN-LAST:event_txt_textoKeyTyped

    private void txt_textoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_textoKeyReleased
        if (elegido.equalsIgnoreCase("Numerico")) {
            if (!esta_rango(Integer.parseInt(getDato()))) {
                evt.consume();
                getToolkit().beep();
                txt_texto.setForeground(Color.red);
                if (Integer.parseInt(getDato()) > max) {
                    String ant = getDato();
                    txt_texto.setText(ant.substring(0, ant.length() - 1));
                }
            } else {
                txt_texto.setForeground(Color.green);
            }
        } else {
            if (!esta_rango(getDato().length())) {
                evt.consume();
                getToolkit().beep();
                txt_texto.setForeground(Color.red);
                if (getDato().length() > max) {
                    String ant = getDato();
                    txt_texto.setText(ant.substring(0, ant.length() - 1));
                }
            } else {
                txt_texto.setForeground(Color.green);
            }
        }

    }//GEN-LAST:event_txt_textoKeyReleased

    public void setVacio() {
        txt_texto.setText(null);
    }

    public void setDefineTitulo(String titulo) {
        eti_titulo.setText(titulo);
    }

    public String getDato() {
        return txt_texto.getText();
    }

    public void setRango(int rango[]) {
        min = rango[0];
        max = rango[1];
    }

    private boolean esta_rango(int num) {
        return num <= max && num >= min;
    }

    public void setLetras(boolean l) {
        if (l == true) {
            elegido = "Letras";
        }
    }

    public void setNumeros(boolean n) {
        if (n == true) {
            elegido = "Numerico";
        }
    }

    public void setCaracter(boolean c) {
        if (c == true) {
            elegido = "All";
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel eti_titulo;
    private javax.swing.JTextField txt_texto;
    // End of variables declaration//GEN-END:variables
}
